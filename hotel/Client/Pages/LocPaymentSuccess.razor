@page "/payment-success"

@page "/success-payment"
@using Hotel.Shared.Models
@using Hotel.Shared.CommonFiles
@inject ILocalStorageService localStorage
@inject IPaymentService roomOrderDetailsService
@inject IBookingService bookingService
@inject NavigationManager NavigationManager

<PageTitle>Thanh toán thành công!</PageTitle>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, width=device-width" />

    <link rel="icon" href="public/favicon.ico" />
    <link rel="stylesheet" href="./global.css" />
    <link rel="stylesheet" href="./TPhngB3.css" />
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Be Vietnam Pro:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400&display=swap" />
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Pattaya:wght@400&display=swap" />
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" />
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Barlow:wght@500&display=swap" />

</head>
<body>
    <canvas id="canvas2"></canvas>
    <div class="t-phng-b3">
        <div class="frame22">
            <div class="frame23">
                <div class="navigation-header2">
                    <div class="navigation-header-child1"></div>
                    <div class="frame24">
                        <div class="ch-logo-vng-1-parent2">
                            <img class="ch-logo-vng-14"
                                 alt=""
                                 src="./public/LocPaymentSuccess/ch-logo-vng-11@2x.png" />

                            <img class="logo-ko-ch-k-n-14"
                                 alt=""
                                 src="./public/LocPaymentSuccess/logo-ko-ch-k-n-11@2x.png" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="chng-ti-s1">
                Chúng tôi sẽ gửi bạn thông tin phòng qua Email sau khi giao dịch được
                xác nhận!
            </div>
        </div>
        <div class="frame25">
            <div class="frame26">
                <img class="stepper-icon" alt="" src="./public/LocPaymentSuccess/stepper.svg" />

                <div class="t-phng-thnh">Đặt phòng thành công!</div>
            </div>
            <div class="frame27">
                <button class="btn-primary2" id="btnPrimary" @onclick="NavigateHome">
                    <div class="bg4"></div>
                    <div class="back-to-home">Trở về</div>
                </button>
                <img class="group-1-1" alt="" src="./public/LocPaymentSuccess/group-1-1@2x.png" />
            </div>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>

@code{
    void NavigateHome(){
        NavigationManager.NavigateTo("/");
    }
    private bool IsPaymentComplete = false;
    private int OrderId;
    private Payment Paid { get; set; } = new Payment();
    private DateTime? Checkin;
    private DateTime? Checkout;

    protected override async Task OnInitializedAsync()
    {
        var orderDetails = await localStorage.GetItemAsync<Hotel.Shared.Models.Booking>(SD.Local_RoomOrderDetails);
        OrderId = await getBid();
        Paid.PAmout = orderDetails.BCost;
        Paid.PDatCoc = DateTime.Now;
        Paid.Status = "Paid";
        Paid.PType = "Bank";
        Paid.BId = OrderId;
        Paid.PaidDate = DateTime.Now;



        Checkin = orderDetails.BCheckoutDate;
        Checkout = orderDetails.BCheckoutDate;
        await roomOrderDetailsService.CreatePayment(Paid);
        // var FinalRoomOrderDetails = await roomOrderDetailsService.UpdatePayment()
        // if (FinalRoomOrderDetails.BStatus == SD.Status_Booked)
        // {
        //     await localStorage.RemoveItemAsync(SD.Local_RoomOrderDetails);
        //     await localStorage.RemoveItemAsync(SD.Local_InitialBooking);

        //     IsPaymentComplete = true;
        // }
    }


    public async Task<int> getBid()
    {
        int max = 0;
        await bookingService.GetBookings();
        foreach (var booking in bookingService.Bookings)
        {
            if (booking.BId > max)
            {
                max = booking.BId;

            }
        }
        return max;
    }
}