@page "/success-payment1"
@using Hotel.Shared.CommonFiles
@inject ILocalStorageService localStorage
@inject IPaymentService roomOrderDetailsService
@inject IBookingService bookingService


<div class="container">
    <div class="row mt-4 pt-4">
        <div class="col-10 offset-1 text-center">
            <h2 class="text-warning">Booking Confirmed</h2>
            <p>Thank you for purchasing a room at Hidden Villa. Order number: @OrderId</p>
            <p>Your check-in date is @Checkin.ToString() and check-out date is @Checkout.ToString()</p>
        </div>
        <div class="col-8 offset-2 mb-1">
            <img src="/images/confirmation.jpg" width="100%" style="border-radius:30px;" />
        </div>
     
    </div>
</div>

@code {
    private bool IsPaymentComplete = false;
    private int OrderId;
    private Payment Paid { get; set; } = new Payment();
    private DateTime? Checkin;
    private DateTime? Checkout;

    protected override async Task OnInitializedAsync()
    {
        var orderDetails = await localStorage.GetItemAsync<Booking>(SD.Local_RoomOrderDetails);
        OrderId = await getBid();
        Paid.PAmout = orderDetails.BCost;
        Paid.PDatCoc=DateTime.Now;
        Paid.Status = "Paid";
        Paid.PType = "Bank";
        Paid.BId = OrderId;        
        Paid.PaidDate = DateTime.Now;

        
       
        Checkin = orderDetails.BCheckoutDate;
        Checkout = orderDetails.BCheckoutDate;
await roomOrderDetailsService.CreatePayment(Paid);
        // var FinalRoomOrderDetails = await roomOrderDetailsService.UpdatePayment()
        // if (FinalRoomOrderDetails.BStatus == SD.Status_Booked)
        // {
        //     await localStorage.RemoveItemAsync(SD.Local_RoomOrderDetails);
        //     await localStorage.RemoveItemAsync(SD.Local_InitialBooking);

        //     IsPaymentComplete = true;
        // }
    }


    public async Task<int> getBid()
    {
        int max = 0;
        await  bookingService.GetBookings();
        foreach(var booking in bookingService.Bookings)
        {
            if (booking.BId > max)
            {
                max = booking.BId;

            }
        }
        return max;
    }
}
