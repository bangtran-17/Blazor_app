@page "/booking"
@using Hotel.Shared
@using Hotel.Shared.CommonFiles
@using Hotel.Client.ViewModel

@inject ILocalStorageService localStorage
@inject IRoomtypeService Rooms
@inject IBookingService BService
@using System;
@using System.Globalization;
@inject NavigationManager NavigationManager

<body>
<canvas id="canvas2"></canvas>
<div class="t-phng2">
    <div class="frame">
        <div class="header-logged-in"></div>
        <img class="ch-logo-vng-12"
             alt=""
             src="./public/ch-logo-vng-1@2x.png" />

        <img class="logo-ko-ch-k-nn-1"
             alt=""
             src="./public/logo-ko-ch-k-n-1@2x.png" />

        <button class="profiletab">
            <img class="profiletab-child"
                 alt=""
                 src="./public/ellipse-1@2x.png" />

            <div class="xin-cho-hong">Xin chào, Hoàng Gia Lộc</div>
            <div class="qun-l-trng">Quản lý trưởng</div>
            <img class="plant-icon" alt="" src="./public/plant@2x.png" />
        </button>
    </div>
    <div class="t-phng-inner">
        <EditForm Model="homeVM" OnSubmit="HandleSubmit">
        <div class="text-field-parent">
            <div class="text-field">
                <div class="text-field1">
                    <div class="state-layer">
                        <div class="content">
                            <div class="input-text">
                                    <InputDate TValue="DateTime?" @bind-Value="@homeVM.StartDate" class="input-text1" />
                            </div>
                            <div class="label-text">
                                <div class="label-text1">Check In</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-field">
                <div class="text-field1">
                    <div class="state-layer">
                        <div class="content">
                            <div class="input-text">
                                    <InputDate TValue="DateTime?"  @bind-Value="@homeVM.EndDate" class="input-text1" />
                            </div>
                            <div class="label-text">
                                <div class="label-text1">Check Out</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                <button class="button" type="submit">
                <div class="style-layer">
                 @*    <img class="search-icon" alt="" src="./public/search@2x.png" /> *@
                            <input type="submit" value="Xác nhận" class="btn btn-block text-black" />
                </div>
            </button>
        </div>
        </EditForm>
    </div>
        @{
            int index = 1;
        }
        @foreach (var room in lstRoomtype)
    {
    
    <div class="frame-parent">
        <div class="hin-th-10-phng-wrapper">
            <div class="hin-th-10-container">
                
                <span class="phng1">Phòng @index</span>
            </div>
        </div>
        <div class="frame-wrapper1">
            <div class="rectangle-parent2">
                <img class="frame-inner" alt="" src="./public/rectangle-3@2x.png" />

                <button class="xem-thm-wrapper" data-modal="true" data-gallery="Grand" aria-label="Open Grand image gallery">
                    <div class="xem-thm1">Xem thêm </div>
                </button>
                <script type="module">
                    import initGallery from "./js/galleryApp.js";
                    initGallery('./data/galleries.json', {
                        speed: 600,
                    })
                </script>
                <div class="frame-group">
                    <div class="frame-parent1">
                        <div class="grand-atlantis-suite-parent">
                            <b class="grand-atlantis-suite">@room.RtName</b>
                            <div class="frame-parent2">
                                <div class="edit-fill-parent">
                                    <img class="edit-fill-icon"
                                         alt=""
                                         src="./public/edit-fill@2x.png" />

                                    <div class="ni-mi-yu">
                                       @room.RtDes
                                    </div>
                                </div>
                                <div class="frame-parent3">
                                    <div class="eye-fill-parent">
                                        <img class="edit-fill-icon"
                                             alt=""
                                             src="./public/eye-fill@2x.png" />

                                        <div class="tm-nhn-tuyt">
                                            Tầm nhìn tuyệt vời về đảo và Biển Ả Rập.
                                        </div>
                                    </div>
                                    <div class="home-fill-parent">
                                        <img class="edit-fill-icon"
                                             alt=""
                                             src="./public/home-fill@2x.png" />

                                        <div class="tm-nhn-tuyt">@room.RArea m2</div>
                                    </div>
                                </div>
                                <div class="user-fill-parent">
                                    <img class="edit-fill-icon"
                                         alt=""
                                         src="./public/user-fill2@2x.png" />

                                    <div class="ngi-ln">
                                        4 người lớn + 2 trẻ em dưới 14 tuổi, hoặc 5 người lớn,
                                        hoặc 5 người lớn + 1 trẻ em dưới 14 tuổi.
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="ch-vi-parent">
                          
                            <b class="vn-m">@room.RtCost VNĐ</b>
                        </div>
                    </div>
                    <div class="frame-child1"></div>
                    <button class="button-wrapper">
                        <div class="button1">
                            <div class="style-layer1">
                              
                                        <button class="button2" @onclick="(() => ShowRoom(room.RtId,room.RtCost))">Xem thêm</button>
                            </div>
                        </div>
                    </button>
                </div>
            </div>
        </div>
            </div>
            index++;
        }
</div>
	<script src="~/js/script1.js"></script>
</body>
@* <EditForm Model="homeVM" OnSubmit="HandleSubmit">
    <div>
        <label for="ckd">Check-in date:</label>
        <InputDate TValue="DateTime?" id="ckd" @bind-Value="@homeVM.StartDate" class="form-control input-text1" />
    </div>
    <div>
        <label for="lastName">Check-out date:</label>
        <InputDate TValue="DateTime?" id="ckd" @bind-Value="@homeVM.EndDate" class="form-control input-text1" />
    </div>
    <div>
        <label for="contactNumber"></label>
        <InputNumber id="amount" @bind-Value="homeVM.NoOfNights" class="form-control input-text1" />
    </div>

    <input type="submit" value="Xác nhận" class="btn btn-success btn-block text-black" />
</EditForm>
 *@
@* <div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">

    @foreach (var room in Rooms.Roomtypes)
    {

        <div class="col-12 col-lg-9 col-md-8">
            <div class="row pt-3">
                <div class="col-12 col-lg-8">
                    <p class="card-title  " style="font-size:xx-large">@room.RtName</p>
                    <p class="card-text">
                        @((MarkupString)room.RtDes) 
                    </p>
                </div>
                <div class="col-12 col-lg-4">
                    <div class="row pb-3 pt-2">
                        <div class="col-12 col-lg-11 offset-lg-1">
                            <span class="float-right">
                                <h4 class="  font-weight-bold pt-4 text-black">
                                    <span style="border-bottom:1px solid #ff6a00">
                                        USD: $@room.RtCost
                                    </span>
                                </h4>

                                <span class="float-right pt-1">Villa Size : @room.RArea sqft</span><br />

                                <button class="btn btn-success btn-block mt-3" @onclick="(() => ShowRoom(room.RtId,room.RtCost))">Book @room.RtName</button>
                                
                            </span>3

                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-12 pb-5">
                        </div>
                    </div>

                </div>
            </div>
        </div>

    }

</div> *@


@code {

    HomeVM homeVM { get; set; } = new HomeVM();
    Booking booking { get; set; } = new Booking();

    List<Roomtype> lstRoomtype = new List<Roomtype>();

    TimeSpan? timeDifference;
    TimeSpan span;

    protected override async Task OnInitializedAsync()
    { 


        try
        { 

            base.OnInitialized();
            if (await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBooking) != null)
            {
                //populate the new homemodel with the information from the homemodel stored in local storage

                homeVM = await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBooking);

                timeDifference = homeVM.EndDate - homeVM.StartDate;
                if (timeDifference.HasValue)
                {
                    span = timeDifference.Value;
                }
                homeVM.NoOfNights = (int)span.Days+1;
                await Rooms.GetRoomtypes();
                lstRoomtype = Rooms.Roomtypes;

            }
            else
            {
                booking.BAmount = 1;
            }

        }
        catch (Exception e)
        {
            throw e;
        }
    }
    public async Task ShowRoom(int Id,decimal? Cost)

    {
        homeVM.Cost = Cost;
        await localStorage.SetItemAsync(SD.Local_InitialBooking, homeVM);
        NavigationManager.NavigateTo($"more/{Id}");
    }
        

    private async Task HandleSubmit()
    {
        int ij = 0;
        for(int i = 0; i < lstRoomtype.Count(); i++)
        {
            lstRoomtype[i].RtCost = Rooms.Roomtypes[i].RtCost * span.Days;
        }
        // InvokeAsync(StateHasChanged());
        // foreach (var room in lstRoomtype)
        // {
        //     room.RtCost = Rooms.Roomtypes[i].RtCost * span.Days;
        //     i++;
        // }
          
        // update the local storage with dates
        
        //Retrieve from database, update with newly changed dates


    }
 

}
