@page "/booking"
@using Hotel.Shared
@using Hotel.Shared.CommonFiles
@inject IModalService model
@inject ILocalStorageService localStorage
@inject IRoomtypeService Rooms
@inject IBookingService BService
@using System;
@using System.Globalization;

<h3>BookingPage</h3>
<EditForm Model="booking" OnSubmit="HandleSubmit">
    <div>
        <label for="ckd">Check-in date:</label>
        <InputDate TValue="DateTime?"  id="ckd" @bind-Value="@booking.BCheckingDate" class="form-control" />
    </div>
    <div>
        <label for="lastName">Check-out date:</label>
        <InputDate TValue="DateTime?" id="ckd" @bind-Value="@booking.BCheckoutDate" class="form-control" />
    </div>
    <div>
        <label for="contactNumber"></label>
        <InputNumber id="amount" @bind-Value="booking.BAmount" class="form-control" />
    </div>
@*     <button @onclick="@(()=>model.Show<BookingConfirmation>("Xác nhận"))" type="submit">Thanh toán</button> *@
    <input type="submit" value="Update" class="btn btn-success btn-block text-black" />
</EditForm>
<div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">

    @foreach (var room in Rooms.Roomtypes)
    {

            <div class="col-12 col-lg-9 col-md-8">
                <div class="row pt-3">
                    <div class="col-12 col-lg-8">
                        <p class="card-title  " style="font-size:xx-large">@room.RtName</p>
                        <p class="card-text">
                            @((MarkupString)room.RtDes)
                        </p>
                    </div>
                    <div class="col-12 col-lg-4">
                        <div class="row pb-3 pt-2">
                            <div class="col-12 col-lg-11 offset-lg-1">
                                <span class="float-right">
                                    <h4 class="  font-weight-bold pt-4 text-black">

                                        <span style="border-bottom:1px solid #ff6a00">
                                            USD: $@room.RtCost
                                        </span>
                                    </h4>
                                    
                                    <span class="float-right pt-1">Villa Size : @room.RArea sqft</span><br />

                         
                                </span>
                              
                            </div>
                        </div>
                        <div class="row ">
                            <div class="col-12 pb-5">
                            </div>
                        </div>

                    </div>
                </div>
            </div>
       
    }

</div>

<CascadingBlazoredModal></CascadingBlazoredModal>
@code {

    
    Booking booking{ get; set; } = new Booking();
    TimeSpan? timeDifference;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            if (await localStorage.GetItemAsync<Booking>(SD.Local_InitialBooking) != null)
            {
                //populate the new homemodel with the information from the homemodel stored in local storage

                booking = await localStorage.GetItemAsync<Booking>(SD.Local_InitialBooking);
                timeDifference = booking.BCheckoutDate - booking.BCheckingDate;
               
                await Rooms.GetRoomtypes();
            }
            else
            {
                booking.BAmount = 1;
            }
         
        }
        catch (Exception e)
        {
            throw e;
        }
    }
  

    private async Task HandleSubmit()
    {
    
      
        // update the local storage with dates
        await localStorage.SetItemAsync(SD.Local_InitialBooking, booking);
        //Retrieve from database, update with newly changed dates
        await BService.CreateBooking(booking);

    }
}
