@page "/admin/employee"
@page "/admin/employee/{id:int}"
@page "/admin/employee/{fname}"

@using Hotel.Shared

@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager

<PageTitle>Quản Lý Nhân Viên</PageTitle>

<button class="btn btn-primary" @onclick="NavigateBack">Quay lại</button>

@if (Id is null)
{
    <PageTitle>Create a new Employee</PageTitle>
    <h3>Create a new Employee</h3>
    <br />
}
else
{
    <PageTitle>Edit Employee @employee.EEmail</PageTitle>
    <h3>Edit Employee @employee.EEmail</h3>
    <br />
    
}

<EditForm Model="employee" OnSubmit="HandleSubmit">
    <div>
        <label for="firstName">First Name</label>
        <InputText id="firstName" @bind-Value="employee.EFirstName" class="form-control" />
    </div>
    <div>
        <label for="lastName">Last Name</label>
        <InputText id="lastName" @bind-Value="employee.ELastName" class="form-control" />
    </div>
    <div>
        <label for="contactNumber">Số điện thoại</label>
        <InputText id="contactNumber" @bind-Value="employee.EContactNumber" class="form-control" />
    </div>
    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="employee.EEmail" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">@btnText</button>

    <button class="btn btn-danger" @onclick="DeleteEmployee">Delete</button>
</EditForm>


@* <EditForm>
    <div>
        <label for="firstName">First Name</label>
        <input id="firstName" class="form-control" />
    </div>
</EditForm> *@

<label>Search for department:</label>
@* <input @bind="search" @bind:event="onchange" @onchange="HandleInputChange" class="form form-control col-2" /> *@
<input @onchange="HandleInputChange" class="form form-control col-2" />
<label>@displayValue</label>






@code {
    [Parameter]
    public int? Id { get; set; }
    [ParameterAttribute]
    public string? Fname { get; set; }

    string btnText = string.Empty;

    Employee? employee = new Employee {  };

    protected override void OnInitialized()
    {
        btnText = Id == null ? "Lưu" : "Cập nhật";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Fname is not null)
        {
            // var result = await EmployeeService.GetEmployeeById((int)Id);
            var result = await EmployeeService.GetEmployeeByFName(Fname);
            if (result is not null)
                employee = result;
            else
                NavigationManager.NavigateTo("/admin/employee");
        }
    }

    async Task HandleSubmit()
    {
        if (Id is null)
        {
            await EmployeeService.CreateEmployee(employee);
        }
        else
        {
            await EmployeeService.UpdateEmployee((int)Id, employee);
        }
    }

    async Task DeleteEmployee()
    {
        await EmployeeService.DeleteEmployee(employee.EId);
    }

    void NavigateBack()
    {
        NavigationManager.NavigateTo("/admin/employees");
    }

    public string search { get; set; }

    private string displayValue;

    private void HandleInputChange(ChangeEventArgs e)
    {
        // Thực hiện các xử lý hoặc biến đổi giá trị tùy theo nhu cầu
        displayValue = $"You entered: {e.Value}";
    }

}
